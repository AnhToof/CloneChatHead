apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.AnhToof'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.facebook.rebound:rebound:0.3.7'
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'http://repo1.maven.org/maven2' }
        maven { url 'http://artifactory.nm.flipkart.com:8081/artifactory/libs-release-local' }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0-alpha10'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:2.2.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.2'
    }
}

group = ARTIFACTORY_GROUP
version = VERSION_NAME
status = STATUS


configurations {
    published
}

task sourceJar(type: Jar) {
    from 'src/main/java'
    classifier "sources"
}

artifacts {
    published sourceJar
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task deleteJar(type: Delete) {
    delete 'libs/jars/springyheadslib.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'springyheadslib.jar')
}

createJar.dependsOn(deleteJar, build)

dependencies {
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "Springy-heads"
        websiteUrl = LIBRARY_URL
        vcsUrl = GIT_URL
        licenses = ["Apache-2.0"]
        publish = true
    }
}